From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: David Greaves <david@dgreaves.com>
Date: Wed, 17 Apr 2013 20:41:09 +0000
Subject: [PATCH] OpenSUSE-debugsubpkg

Create a debuginfo package for each subpackage.
---
 scripts/find-debuginfo.in | 29 +++++++++++++++++------------
 1 file changed, 17 insertions(+), 12 deletions(-)

diff --git a/scripts/find-debuginfo.in b/scripts/find-debuginfo.in
index 76b0e1e..4bda5ba 100755
--- a/scripts/find-debuginfo.in
+++ b/scripts/find-debuginfo.in
@@ -684,20 +684,25 @@ if $run_dwz \
   fi
 fi
 
+# We used to make a .debug symlink for each symlink whose target
+# has a .debug file to that file.  This is not necessary because
+# the debuglink section contains only the destination of those links.
+# Creating those links anyway results in debuginfo packages for
+# devel packages just because of the .so symlinks in them.
+
 # For each symlink whose target has a .debug file,
 # make a .debug symlink to that file.
-$quiet || echo "Creating .debug symlinks for symlinks to ELF files" 2>&1
-find "$RPM_BUILD_ROOT" ! -path "${debugdir}/*" -type l -print |
-while read f
-do
-  t=$(readlink -m "$f").debug
-  f=${f#$RPM_BUILD_ROOT}
-  t=${t#$RPM_BUILD_ROOT}
-  if [ -f "$debugdir$t" ]; then
-    $verbose && echo "symlinked /usr/lib/debug$t to /usr/lib/debug${f}.debug"
-    debug_link "/usr/lib/debug$t" "${f}.debug"
-  fi
-done
+#find "$RPM_BUILD_ROOT" ! -path "${debugdir}/*" -type l -print |
+#while read f
+#do
+#  t=$(readlink -m "$f").debug
+#  f=${f#$RPM_BUILD_ROOT}
+#  t=${t#$RPM_BUILD_ROOT}
+#  if [ -f "$debugdir$t" ]; then
+#    $verbose && echo "symlinked /usr/lib/debug$t to /usr/lib/debug${f}.debug"
+#    debug_link "/usr/lib/debug$t" "${f}.debug"
+#  fi
+#done
 
 if [ -s "$SOURCEFILE" ]; then
   # See also debugedit invocation. Directories must match up.
